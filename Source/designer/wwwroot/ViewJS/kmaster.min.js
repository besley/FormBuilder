var kcommon = function () { function kcommon() { } return kcommon.dataTypeDict = {}, kcommon.inputTypeDict = {}, kcommon.dataTypeDict.VARCHAR = 1, kcommon.dataTypeDict.INT = 2, kcommon.dataTypeDict.DECIMAL = 3, kcommon.dataTypeDict.DATE = 4, kcommon.dataTypeDict.TEXT = 5, kcommon.inputTypeDict.TEXTBOX = 1, kcommon.inputTypeDict.PASSWORD = 2, kcommon.inputTypeDict.COMBOBOX = 3, kcommon.inputTypeDict.CHECKBOXGROUP = 4, kcommon.inputTypeDict.RADIOGROUP = 5, kcommon.inputTypeDict.MULTIPLELIST = 6, kcommon.inputTypeDict.DATE = 7, kcommon.inputTypeDict.TEXT = 8, kcommon.inputTypeDict.BUTTON = 16, kcommon.inputTypeDict.IMAGE = 17, kcommon.initializeControls = function () { $(".form_datetime").datetimepicker({ format: "yyyy-mm-dd" }), $("button[data-onclick]").each(function (i) { var func = $(this).attr("data-onclick"); if (func) { var f = eval("(" + func + ")"); $(this).click(function () { try { f() } catch (t) { } }) } }) }, kcommon.upload = function () { BootstrapDialog.show({ title: "文件上传...", message: $("<div></div>").load(jshelper.getAppName() + "/file/upload"), draggable: !0 }) }, kcommon.initFileImport = function () { var t = jshelper.getAppName(); new qq.FineUploader({ element: document.getElementById("fine-uploader-validation"), template: "qq-template-validation", request: { endpoint: t + "/api/FineUpload/Import", params: { extraParam1: "1", extraParam2: "2" } }, thumbnails: { placeholders: { waitingPath: t + "/Content/fineuploader/waiting-generic.png", notAvailablePath: t + "/Content/fineuploader/not_available-generic.png" } }, validation: { allowedExtensions: ["xml", "txt"], itemLimit: 1, sizeLimit: 51200 }, callbacks: { onComplete: function (t, e, n) { !0 === n.success ? $.msgBox({ title: "Form / File", content: n.Message, type: "info", buttons: [{ value: "Ok" }] }) : $.msgBox({ title: "Form / File", content: n.ExceptionMessage, type: "error", buttons: [{ value: "Ok" }] }) } } }) }, kcommon }(), kmaster = function () { function t() { } function e(e, n) { if (t.mcurrentControlID = n, "datatable" !== e) { var i = window.templates[e]; void 0 === i && (i = function () { return "" }); var o = { header: $("#" + n).find(".control-label").text(), content: i({}), type: e, forCtrl: n, display: "block" }, a = window.templates.common(o) + ""; $("[name=customization_modal]").remove(), $('<div id="customization_modal" name="customization_modal" class="modal hide fade" />').append(a).modal("show"), setTimeout(function () { fieldPopup.popupControl(e, n) }, 300) } else BootstrapDialog.show({ title: "数据来源", message: $("<div></div>").load("EntityDef/Binding"), draggable: !0 }) } return t.mcurrentEntityDefID = 0, t.mctrlIndex = 1001, t.moutputHtmlPageContent = "", t.docReady = function () { !function () { $(".progress .bar").progressbar({ transition_delay: 200 }); var t = $(".js-loading-bar"); t.find(".bar"); t.modal("show"), setTimeout(function () { t.modal("hide") }, 500) }(), window.templates = {}, window.templates.common = Handlebars.compile($("#control-customize-template").html()), window.templates.textbox = Handlebars.compile($("#textbox-template").html()), window.templates.passwordbox = Handlebars.compile($("#textbox-template").html()), window.templates.combobox = Handlebars.compile($("#combobox-template").html()), window.templates.selectmultiplelist = Handlebars.compile($("#combobox-template").html()), window.templates.radiogroup = Handlebars.compile($("#combobox-template").html()), window.templates.checkboxgroup = Handlebars.compile($("#combobox-template").html()), window.templates.text = Handlebars.compile($("#text-template").html()), window.templates.date = Handlebars.compile($("#date-template").html()), window.templates.form = Handlebars.compile($("#form-template").html()), $(".droppedFields").droppable({ activeClass: "activeDroppable", hoverClass: "hoverDroppable", accept: ":not(.ui-sortable-helper)", drop: function (n, i) { if (0 != t.mcurrentEntityDefID) { var o, a = i.draggable; (a = $(i.draggable).find(".modele").clone()).removeClass("modele"), a.removeClass("selectorField"), a.addClass("droppedField"), a[0].id = "CTRL-DIV-" + (o = 1e3, $(".droppedField").each(function (t, e) { var n = $(e).attr("id").split("-")[2]; parseInt(n) > parseInt(o) && (o = n) }), t.mctrlIndex = parseInt(o) + 1, t.mctrlIndex), a.appendTo(this), a.click(function () { var t = $(this), n = t.find("[class*=ctrl]")[0], i = $.trim(n.className.match("ctrl-.*")[0].split(" ")[0].split("-")[1]); e(i, this.id) }) } else $.msgBox({ title: "Master / Entity", content: "请先选择表单记录，再拖动控件！", type: "info" }) } }), $(".droppedFields").mouseenter(function () { t.tableToDelete = this, $("#divDeleteTable").show(), $("#divDeleteTable").position({ my: "right top", at: "right top", of: $(this).parent().children().last() }) }), $(".droppedFields").mouseleave(function () { $("#divDeleteTable").hide() }), $(".droppedField").click(function () { var t = $(this), n = t.find("[class*=ctrl]")[0], i = $.trim(n.className.match("ctrl-.*")[0].split(" ")[0].split("-")[1]); e(i, this.id) }), $(".selectorField").draggable({ helper: "clone", stack: "div", cursor: "move", cancel: null }), $("#divDeleteTable").hide(), $("#divDeleteTable").mouseenter(function () { $("#divDeleteTable").show() }), $("#sliderNumberColumn").slider({ min: 1, max: 4, value: 1, slide: function (t, e) { $("#numberColumn").html(e.value) } }), $("#numberColumn").html($("#sliderNumberColumn").slider("value")), $("#selected-content").sortable({ cancel: null, start: function (t, e) { $("#divDeleteTable").hide() } }).disableSelection() }, t.createEntityDef = function () { t.mcurrentEntityDefID = 0; var e = { label: "", name: "", desc: "" }, n = window.templates.form; void 0 === n && (n = function () { return "" }); var i = { header: "表单定义", content: n(e), display: "block" }; $("[name=custom_form_modal]").remove(), $('<div id="custom_form_modal" name="custom_form_modal" class="modal hide fade" />').append(i.content).modal("show") }, t.popupEntityDef = function () { var e = {}; if (0 == t.mcurrentEntityDefID) return !1; jshelper.ajaxGet("api/eavdata/GetEntityDefByID/" + t.mcurrentEntityDefID, null, function (t) { if (1 == t.Status) { var n = t.Entity; e.label = n.EntityTitle, e.name = n.EntityName, e.desc = n.Description; var i = window.templates.form; void 0 === i && (i = function () { return "" }); var o = { header: "表单定义", content: i(e), display: "block" }; $("[name=custom_form_modal]").remove(), $('<div id="custom_form_modal" name="custom_form_modal" class="modal hide fade" />').append(o.content).modal("show") } else $.msgBox({ title: "Ooops", content: t.Message, type: "error", buttons: [{ value: "Ok" }] }) }) }, t.deleteTable = function () { t.tableToDelete && $.msgBox({ title: "Are You Sure", content: "确定要删除表格吗?", type: "confirm", buttons: [{ value: "Yes" }, { value: "Cancel" }], success: function (e) { if ("Yes" == e) { for (var n = $(t.tableToDelete).parent().find("input[class=hiddenAttributeEntity]"), i = new Array, o = 0; o < n.length; o++)null != n[o].val && (i[o] = $.parseJSON(n[o].value)); $("body").append($("#divDeleteTable")), $(t.tableToDelete).parent().remove(), t.tableToDelete = null, $("#divDeleteTable").hide(); var a = $("#selected-content")[0].outerHTML, l = { ID: t.mcurrentEntityDefID, TemplateContent: a, HTMLContent: "" }, r = {}; return r.EntityDef = l, r.EntityAttributeList = i, void jshelper.ajaxPost("api/eavdata/DeleteAttributeWithTemplate", JSON.stringify(r), function (t) { 1 == t.Status ? $.msgBox({ title: "Master / Table", content: "表格已经删除，并且模板内容已经更新！", type: "info" }) : $.msgBox({ title: "Ooops", content: t.Message, type: "error", buttons: [{ value: "Ok" }] }) }) } } }) }, t.generateHTMLContent = function () { var t = $("#selected-content").clone(); t.find("div").each(function (t, e) { $(e).removeClass("draggableField ui-draggable well ui-droppable ui-sortable") }); var e = $("#txtFormTitle")[0].value; return null != e && "" != e || (e = "自定义表单示例"), t.find("#form-title-div").remove(), t.html() }, t.previewForm = function () { 1 == t.validateInput() && window.open("preview/index/" + t.mcurrentEntityDefID) }, t.showAdjustDialog = function () { $("#dialog-form-number-column").modal("show").css("z-index", "1500") }, t.validateInput = function () { var t = !0; return $("#selected-content").find("[class=hiddenAttributeEntity]").each(function (e, n) { if (!n.value || "" == n.value) { t = !1; var i = $(n).parent().children(":first").text(); return $.msgBox({ title: "Master / Field", content: "字段信息需要填写完整并先保存, 当前字段:" + i, type: "alert" }), !1 } var o = $.parseJSON(n.value); if (null == o.AttrName || "" == o.AttrName) return t = !1, $.msgBox({ title: "Master / Field", content: "字段信息需要填写完整, 当前字段类型:" + o.type, type: "alert" }), !1 }), t }, t.validatedSaveTemplate = function () { 1 == t.validateInput() && eavManager.SaveTemplateWithHTMLContent() }, t }(), fieldManager = function () { function t() { } function e(t) { var e = $("#selected-content")[0].outerHTML, n = { ID: kmaster.mcurrentEntityDefID, TemplateContent: e, HTMLContent: "" }, i = new Array; i[0] = t; var o = {}; o.EntityDef = n, o.EntityAttributeList = i, jshelper.ajaxPost("api/eavdata/DeleteAttributeWithTemplate", JSON.stringify(o), function (t) { 1 == t.Status ? ($.msgBox({ title: "Master / Attribute", content: "字段已经删除，并且模板内容已经更新！", type: "info" }), $("[name=customization_modal]").modal("hide")) : $.msgBox({ title: "Ooops", content: t.Message, type: "error", buttons: [{ value: "Ok" }] }) }) } return t.popupControl = function (t, e) { var n = $("#eavForm"), i = $("#" + e), o = i.find(".hiddenMandatory"); if (null != o && o.length > 0) { var a = o[0]; n.find("[name=mandatory]").attr("checked", "true" == a.value), n.find("#pMandatory").show } else n.find("#pMandatory").hide(); n.find("[name=title]").val(i.find(".control-label").text()); var l = fieldPopup[t]; void 0 !== l && l(t, e) }, t.updateAttribute = function (t, e) { var n = $("#eavForm").find("input[name=title]").val(); if (null == n || "" == n) return $.msgBox({ title: "Master / Attribute", content: "字段标题需要输入！", type: "alert" }), !1; var i = {}, o = null; $("#eavForm").find("input, textarea, select").each(function (t, e) { o = "checkbox" == e.type ? e.checked : e.value, i[e.name] = o }), function (t) { var e = $("#" + t.forCtrl); e.find(".control-label").text(t.title); var n = e.find(".hiddenMandatory"); if (null != n && n.length > 0) { var i = n[0]; i.value = t.mandatory } var o = "" != e.find(".hiddenAttributeEntity").val() ? $.parseJSON(e.find(".hiddenAttributeEntity").val()) : {}; o.EntityDefID = kmaster.mcurrentEntityDefID, o.DivCtrlKey = t.forCtrl, o.AttrName = t.title, o.AttrDataType = t.datatype; var a = function (t) { var e = { storageType: 1 }; "textbox" == t ? e.fieldInputType = 1 : "passwordbox" == t ? e.fieldInputType = 2 : "combobox" == t ? e.fieldInputType = 3 : "checkboxgroup" == t ? e.fieldInputType = 4 : "radiogroup" == t ? e.fieldInputType = 5 : "selectmultiplelist" == t ? e.fieldInputType = 6 : "date" == t ? e.fieldInputType = 7 : "text" == t ? e.fieldInputType = 8 : "datatable" == t ? (e.fieldInputType = 15, e.storageType = 0) : "btn" == t ? (e.fieldInputType = 16, e.storageType = 0) : "image" == t ? (e.fieldInputType = 17, e.storageType = 0) : $.msgBox({ title: "Ooops", content: "未知类型的控件！", type: "error", buttons: [{ value: "Ok" }] }); return e }(t.type); o.FieldInputType = a.fieldInputType, o.StorageType = a.storageType, o.Format = t.dateformat, o.IsMandatory = t.mandatory, o.ConditionKey = t.conditionkey, o.CommandText = t.commandtext, jshelper.ajaxPost("api/eavdata/SaveAttribute", JSON.stringify(o), function (n) { if (1 == n.Status) { var i = n.Entity; e.find(".hiddenAttributeEntity").attr("value", JSON.stringify(i)), t.code = i.AttrCode; var o = fieldChangeSave[t.type]; void 0 !== o && o(t); var a = $("#selected-content")[0].outerHTML, l = { ID: kmaster.mcurrentEntityDefID, TemplateContent: a }; jshelper.ajaxPost("api/eavdata/SaveTemplateContent", JSON.stringify(l), function (t) { 1 == t.Status ? ($.msgBox({ title: "Master / Attribute", content: "字段和模板内容已经更新！", type: "info" }), $("[name=customization_modal]").modal("hide")) : $.msgBox({ title: "Ooops", content: t.Message, type: "error", buttons: [{ value: "Ok" }] }) }) } else $.msgBox({ title: "Ooops", content: n.Message, type: "error", buttons: [{ value: "Ok" }] }) }) }(i) }, t.deleteField = function (t, n) { $.msgBox({ title: "Are You Sure", content: "确实要删除该控件吗？", type: "confirm", buttons: [{ value: "Yes" }, { value: "Cancel" }], success: function (t) { if ("Yes" == t) { var n = $("#eavForm").find("[name=forCtrl]").val(), i = $("#" + n), o = "" != i.find(".hiddenAttributeEntity").val() ? $.parseJSON(i.find(".hiddenAttributeEntity").val()) : null; if (i.remove(), null == o) return !1; e(o) } } }) }, t.deleteBindingControl = function (t, n) { $.msgBox({ title: "Are You Sure", content: "确实要删除该控件吗？", type: "confirm", buttons: [{ value: "Yes" }, { value: "Cancel" }], success: function (t) { if ("Yes" == t) { var n = $("#" + kmaster.mcurrentControlID), i = "" != n.find(".hiddenAttributeEntity").val() ? $.parseJSON(n.find(".hiddenAttributeEntity").val()) : null; if (n.remove(), null == i) return !1; e(i) } } }) }, t }(), fieldPopup = function () { function t() { } return t.popupControl = function (e, n) { var i = $("#eavForm"), o = $("#" + n), a = o.find(".hiddenMandatory"); if (null != a && a.length > 0) { var l = a[0]; i.find("[name=mandatory]").attr("checked", "true" == l.value), i.find("#pMandatory").show } else i.find("#pMandatory").hide(); i.find("[name=title]").val(o.find(".control-label").text()); var r = t.getHiddenAttribute(o); "btn" === e ? (i.find("#pConditionKey").hide(), i.find("#pCommandText").show()) : (i.find("#pCommandText").hide(), i.find("#pConditionKey").show(), r && i.find("[name=conditionkey]").val(r.ConditionKey)); var d = t[e]; void 0 !== d && d(e, n, r) }, t.getHiddenAttribute = function (t) { var e = null; return "" != t.find(".hiddenAttributeEntity").val() && (e = $.parseJSON(t.find(".hiddenAttributeEntity").val())), e }, t.textbox = function (t, e, n) { var i = $("#eavForm"), o = $("#" + e).find("input[type=text]")[0]; i.find("[name=placeholder]").val(o.placeholder), null != n && i.find("[name=datatype]").val(n.AttrDataType) }, t.passwordbox = function (t, e, n) { var i = $("#eavForm"), o = $("#" + e).find("input[type=password]")[0]; i.find("[name=placeholder]").val(o.placeholder) }, t.combobox = function (t, e, n) { var i = $("#eavForm"), o = $("#" + e).find("select")[0], a = ""; $(o).find("option").each(function (t, e) { a += e.text + "\n" }), i.find("[name=options]").val($.trim(a)) }, t.selectmultiplelist = function (e, n, i) { t.combobox(e, n) }, t.radiogroup = function (t, e, n) { var i = $("#eavForm"), o = $("#" + e), a = "", l = o.find("div").find("span"); o.find("div").find("input"); l.each(function (t, e) { a += $(e).text() + "\n" }), i.find("[name=options]").val($.trim(a)) }, t.checkboxgroup = function (e, n, i) { t.radiogroup(e, n) }, t.btn = function (t, e, n) { var i = $("#eavForm"), o = $("#" + e).find("button")[0]; (i.find("[name=title]").val($(o).text().trim()), null !== n) ? i.find("[name=commandtext]").val(n.CommandText) : $(o).hasClass("ctrl-btn-fileupload") && i.find("[name=commandtext]").val("kcommon.upload();"); $("#tLabel").hide() }, t.text = function (t, e, n) { $("#eavForm"), $("#" + e).find(".ctrl-text")[0] }, t.date = function (t, e, n) { var i = $("#eavForm"); $("#" + e).find(".ctrl-date")[0]; i.find("[name=datatype]").val(kcommon.dataTypeDict.DATE), null != n && i.find("select[name=dateformat]").val(n.Format) }, t }(), fieldChangeSave = function () { function t() { } return t.textbox = function (t) { var e = $("#" + t.forCtrl).find("input[type=text]")[0]; e.placeholder = t.placeholder, e.name = t.code }, t.passwordbox = function (t) { var e = $("#" + t.forCtrl).find("input[type=password]")[0]; e.placeholder = t.placeholder, e.name = t.code }, t.combobox = function (t) { var e = $("#" + t.forCtrl).find("select")[0]; e.name = t.code, $(e).empty(), $(t.options.split("\n")).each(function (t, n) { $(e).append("<option>" + $.trim(n) + "</option>") }) }, t.checkboxgroup = function (t) { var e = $("#" + t.forCtrl), n = $(".selectorField .ctrl-checkboxgroup span")[0], i = $(".selectorField .ctrl-checkboxgroup input")[0], o = e.find(".ctrl-checkboxgroup"); o.empty(), $(t.options.split("\n")).each(function (e, a) { var l = $(n).clone().text($.trim(a)), r = $(i).clone(); r[0].name = t.code, r[0].value = $.trim(a), l.prepend(r), $(o).append(l) }) }, t.selectmultiplelist = function (e) { t.combobox(e) }, t.radiogroup = function (t) { var e = $("#" + t.forCtrl), n = $(".selectorField .ctrl-radiogroup span")[0], i = $(".selectorField .ctrl-radiogroup input")[0], o = e.find(".ctrl-radiogroup"); o.empty(), $(t.options.split("\n")).each(function (e, a) { var l = $(n).clone().text($.trim(a)), r = $(i).clone(); r[0].name = t.code, r[0].value = $.trim(a), l.prepend(r), $(o).append(l) }) }, t.btn = function (t) { var e = $("#" + t.forCtrl).find("button")[0]; $(e).html($(e).html().replace($(e).text(), " " + $.trim(t.title))), e.name = t.code; var n = "function func" + e.name + "(){" + t.commandtext + "}"; $(e).attr("data-onclick", n) }, t.text = function (t) { var e = $("#" + t.forCtrl).find(".ctrl-text"); e.text(t.text), e.attr("name", t.code) }, t.date = function (t) { $("#" + t.forCtrl).find(".ctrl-date").attr("name", t.code) }, t.simpletext = function (t, e, n) { $("#" + t.forCtrl).find(e).text(n) }, t }(), tableManager = function () { function t() { } return t.appendTable = function () { for (var t = $("#sliderNumberColumn").slider("value"), e = '<div class="row-fluid">', n = 12 / t, i = 0; i < t; i++)e += '<div class="span' + n + ' well droppedFields"></div>\n'; e += "</div>", $("#dialog-form-number-column").modal("hide"), $("#selected-content").append(e), kmaster.docReady() }, t }(), eavManager = function () { function t() { } return t.EntityDef = {}, t.Attributes = [], t.saveEntityDef = function () { var t = {}; if ($("#defForm").find("input").each(function (e, n) { t[n.name] = n.value }), "" != t.title && "" != t.name) { var e = {}; if (e.ID = kmaster.mcurrentEntityDefID, e.EntityTitle = t.label, e.EntityName = t.name, e.Description = t.desc, 0 == e.ID) { var n = '<div class="span12 ui-sortable" id="selected-content"><div class="row-fluid" id="form-title-div"><input value=' + e.EntityTitle + ' class="input-large span12" placeholder="请输入表单标题..." id="txtFormTitle" onclick="kmaster.popupEntityDef();" type="text"></div><div class="row-fluid"><div class="span6 well droppedFields ui-droppable"></div><div class="span6 well droppedFields ui-droppable"></div></div><div class="row-fluid"><div class="span12 well action-bar droppedFields ui-droppable" style="min-height:80px;"></div></div></div>'; e.TemplateContent = n, e.HTMLContent = '<div class="row-fluid"><div class="span6 droppedFields"></div><div class="span6 droppedFields"></div></div><div class="row-fluid"><div class="span12 action-bar droppedFields" style="min-height:80px;"></div></div>' } jshelper.ajaxPost("api/eavdata/SaveEntityDef", JSON.stringify(e), function (t) { if (1 == t.Status) { $.msgBox({ title: "Master / Entity", content: "表单记录已经成功保存！", type: "info" }); var e = t.Entity; kmaster.mcurrentEntityDefID = e.ID, $("#txtFormTitle").attr("value", e.EntityTitle), $("#selected-content").replaceWith(e.TemplateContent), kmaster.docReady() } else $.msgBox({ title: "Ooops", content: t.Message, type: "error", buttons: [{ value: "Ok" }] }) }) } else $.msgBox({ title: "Master / Entity", content: "表单信息不完整，请输入表单标题等基本信息再点击保存！", type: "info" }) }, t.SaveTemplateWithHTMLContent = function () { var t = $("#selected-content")[0].outerHTML, e = kmaster.generateHTMLContent(), n = { ID: kmaster.mcurrentEntityDefID, TemplateContent: t, HTMLContent: e }; jshelper.ajaxPost("api/eavdata/SaveTemplateWithHTMLContent", JSON.stringify(n), function (t) { 1 == t.Status ? $.msgBox({ title: "Master / Entity", content: "表单模板已经成功保存！", type: "info" }) : $.msgBox({ title: "Ooops", content: t.Message, type: "error", buttons: [{ value: "Ok" }] }) }) }, t.saveAttribute = function (t) { jshelper.ajaxPost("api/eavdata/SaveAttribute", JSON.stringify(t), function (t) { 1 == t.Status ? $.msgBox({ title: "Master / Attribute", content: "属性记录已经成功保存！", type: "info" }) : $.msgBox({ title: "Ooops", content: t.Message, type: "error", buttons: [{ value: "Ok" }] }) }) }, t }(), kbuilder = function () { function t() { } return t.initEntityInfoAttrValueTable = function (t, e) { jshelper.ajaxGet("api/FBMaster/GetEntityAttributeList/" + e, null, function (n) { if (1 == n.Status) { var i = n.Entity, o = { EntityDefID: e }; jshelper.ajaxPost("api/FBData/GetEntityInfoWithAttrValueList", JSON.stringify(o), function (e) { 1 === e.Status ? function (t, e) { $(t).empty(); var n = []; n.push({ headerName: "ID", field: "ID", width: 50 }), $.each(e, function (t, e) { var i = { headerName: e.AttrName, field: e.AttrCode, width: 100 }; n.push(i) }); var i = { columnDefs: n, rowSelection: "single" }; new agGrid.Grid(t, i) }(t, i) : $.msgBox({ title: "Form / EntityInfoAttrValue", content: e.Message, type: "error" }) }) } else $.msgBox({ title: "Form / EntityDeft", content: n.Message, type: "error" }) }) }, t }();